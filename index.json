{"repository_name":"lucky_task","body":"# Lucky Task\n\nA Crystal library for creating command line tasks to be used with the [LuckyCli](https://github.com/luckyframework/lucky_cli).\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     lucky_task:\n       github: luckyframework/lucky_task\n   ```\n\n2. Run `shards install`\n\n## Integrating With LuckyCli\n\nCreate a file `tasks.cr` at the root of your project\n\n```crystal\nrequire \"lucky_task\"\n\n# Using `lucky` from the command line will do nothing if you forget this\nLuckyTask::Runner.run\n```\n\n## Creating Tasks\n\nCreate a `tasks` directory in the root of your project.\n\nUpdate your `tasks.cr` file to require all files within that directory for them to be registered with the CLI.\n\n```crystal\n# tasks.cr\nrequire \"lucky_task\"\nrequire \"./tasks/*\"\n```\n\nIn the directory create a file called `send_daily_notifications.cr`.\n\n```crystal\nclass SendDailyNotifications < LuckyTask::Task\n  summary \"Send notifications to users\"\n  \n  # Name is inferred from class name (\"send_daily_notifications\")\n  # It can be overridden:\n  #\n  #   name \"app.send_daily_notifications\"\n  \n  def call\n    # Code that sends notifications to all your users...\n  end\nend\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/luckyframework/lucky_task/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [matthewmcgarvey](https://github.com/matthewmcgarvey) - creator and maintainer\n","program":{"html_id":"lucky_task/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"lucky_task","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"lucky_task/LuckyTask","path":"LuckyTask.html","kind":"module","full_name":"LuckyTask","name":"LuckyTask","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/lucky_task.cr","line_number":5,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task.cr#L5"},{"filename":"src/lucky_task/text_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/text_helpers.cr#L1"}],"repository_name":"lucky_task","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"lucky_task/LuckyTask/Runner","path":"LuckyTask/Runner.html","kind":"class","full_name":"LuckyTask::Runner","name":"Runner","abstract":false,"superclass":{"html_id":"lucky_task/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky_task/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky_task/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky_task/runner.cr","line_number":1,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L1"}],"repository_name":"lucky_task","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"lucky_task/LuckyTask/TextHelpers","kind":"module","full_name":"LuckyTask::TextHelpers","name":"TextHelpers"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"lucky_task/LuckyTask","kind":"module","full_name":"LuckyTask","name":"LuckyTask"},"doc":null,"summary":null,"class_methods":[{"id":"exit_with_error_if_not_found=(exit_with_error_if_not_found)-class-method","html_id":"exit_with_error_if_not_found=(exit_with_error_if_not_found)-class-method","name":"exit_with_error_if_not_found=","doc":null,"summary":null,"abstract":false,"args":[{"name":"exit_with_error_if_not_found","doc":null,"default_value":"","external_name":"exit_with_error_if_not_found","restriction":""}],"args_string":"(exit_with_error_if_not_found)","args_html":"(exit_with_error_if_not_found)","location":{"filename":"src/lucky_task/runner.cr","line_number":3,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L3"},"def":{"name":"exit_with_error_if_not_found=","args":[{"name":"exit_with_error_if_not_found","doc":null,"default_value":"","external_name":"exit_with_error_if_not_found","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@exit_with_error_if_not_found = exit_with_error_if_not_found"}},{"id":"exit_with_error_if_not_found?-class-method","html_id":"exit_with_error_if_not_found?-class-method","name":"exit_with_error_if_not_found?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/runner.cr","line_number":3,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L3"},"def":{"name":"exit_with_error_if_not_found?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@exit_with_error_if_not_found"}},{"id":"find_task(task_name:String)-class-method","html_id":"find_task(task_name:String)-class-method","name":"find_task","doc":null,"summary":null,"abstract":false,"args":[{"name":"task_name","doc":null,"default_value":"","external_name":"task_name","restriction":"String"}],"args_string":"(task_name : String)","args_html":"(task_name : String)","location":{"filename":"src/lucky_task/runner.cr","line_number":45,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L45"},"def":{"name":"find_task","args":[{"name":"task_name","doc":null,"default_value":"","external_name":"task_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@tasks.find do |task|\n  task.name == task_name\nend"}},{"id":"help_text-class-method","html_id":"help_text-class-method","name":"help_text","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/runner.cr","line_number":35,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L35"},"def":{"name":"help_text","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(\"Usage: lucky name.of.task [options]\\n\\nAvailable tasks:\\n\\n#{tasks_list}\")"}},{"id":"list_padding_for(task_name)-class-method","html_id":"list_padding_for(task_name)-class-method","name":"list_padding_for","doc":null,"summary":null,"abstract":false,"args":[{"name":"task_name","doc":null,"default_value":"","external_name":"task_name","restriction":""}],"args_string":"(task_name)","args_html":"(task_name)","location":{"filename":"src/lucky_task/runner.cr","line_number":60,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L60"},"def":{"name":"list_padding_for","args":[{"name":"task_name","doc":null,"default_value":"","external_name":"task_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\" \" * ((longest_task_name - task_name.size) + 2)"}},{"id":"longest_task_name-class-method","html_id":"longest_task_name-class-method","name":"longest_task_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/runner.cr","line_number":64,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L64"},"def":{"name":"longest_task_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tasks.map do |__arg1|\n  __arg1.name.size\nend.max"}},{"id":"run(args=ARGV,io:IO=STDERR)-class-method","html_id":"run(args=ARGV,io:IO=STDERR)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"ARGV","external_name":"args","restriction":""},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args = <span class=\"t\">ARGV</span>, io : IO = <span class=\"t\">STDERR</span>)","args_html":"(args = <span class=\"t\">ARGV</span>, io : IO = <span class=\"t\">STDERR</span>)","location":{"filename":"src/lucky_task/runner.cr","line_number":11,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L11"},"def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"ARGV","external_name":"args","restriction":""},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"task_name = args.shift?\nif (!task_name.nil?) && ({\"--help\", \"-h\"}.includes?(task_name))\n  puts(help_text)\nelse\n  if task_name.nil?\n    io.puts(\"Missing a task name\\n\\nTo see a list of available tasks, run #{\"lucky --help\".colorize(:green)}\")\n  else\n    if task = find_task(task_name)\n      task.output = io\n      task.print_help_or_call(args)\n    else\n      TaskNotFoundErrorMessage.print(task_name)\n      if exit_with_error_if_not_found?\n        exit(127)\n      end\n    end\n  end\nend\n"}},{"id":"tasks-class-method","html_id":"tasks-class-method","name":"tasks","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/runner.cr","line_number":7,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L7"},"def":{"name":"tasks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@tasks.sort_by!(&.name)"}},{"id":"tasks_list-class-method","html_id":"tasks_list-class-method","name":"tasks_list","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/runner.cr","line_number":49,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/runner.cr#L49"},"def":{"name":"tasks_list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |list|\n  tasks.each do |task|\n    list << ((\"  #{arrow} \" + task.name).colorize(:green))\n    list << (list_padding_for(task.name))\n    list << task.summary\n    list << \"\\n\"\n  end\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"lucky_task/LuckyTask/Task","path":"LuckyTask/Task.html","kind":"class","full_name":"LuckyTask::Task","name":"Task","abstract":true,"superclass":{"html_id":"lucky_task/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky_task/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky_task/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky_task/task.cr","line_number":1,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task.cr#L1"}],"repository_name":"lucky_task","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lucky_task/LuckyTask","kind":"module","full_name":"LuckyTask","name":"LuckyTask"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/task.cr","line_number":190,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task.cr#L190"},"def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/task.cr","line_number":191,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task.cr#L191"},"def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[{"id":"arg(arg_name,description,shortcut=nil,optional=false,format=nil,example=nil)-macro","html_id":"arg(arg_name,description,shortcut=nil,optional=false,format=nil,example=nil)-macro","name":"arg","doc":"Creates a method of `arg_name` that returns the value passed in from the CLI.\nThe CLI arg is specified by the `--arg_name=VALUE` flag.\n\n* `arg_name` : String - The name of the argument\n* `description` : String - The help text description for this option\n* `shorcut` : String - An optional short flag (e.g. -a VALUE)\n* `optional` : Bool - When false, raise exception if this arg is not passed\n* `format` : Regex - The format you expect the args to match\n* `example` : String - An example string that matches the given `format`","summary":"<p>Creates a method of <code>arg_name</code> that returns the value passed in from the CLI.</p>","abstract":false,"args":[{"name":"arg_name","doc":null,"default_value":"","external_name":"arg_name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"shortcut","doc":null,"default_value":"nil","external_name":"shortcut","restriction":""},{"name":"optional","doc":null,"default_value":"false","external_name":"optional","restriction":""},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":""},{"name":"example","doc":null,"default_value":"nil","external_name":"example","restriction":""}],"args_string":"(arg_name, description, shortcut = <span class=\"n\">nil</span>, optional = <span class=\"n\">false</span>, format = <span class=\"n\">nil</span>, example = <span class=\"n\">nil</span>)","location":{"filename":"src/lucky_task/task.cr","line_number":121,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task.cr#L121"},"def":{"name":"arg","args":[{"name":"arg_name","doc":null,"default_value":"","external_name":"arg_name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"shortcut","doc":null,"default_value":"nil","external_name":"shortcut","restriction":""},{"name":"optional","doc":null,"default_value":"false","external_name":"optional","restriction":""},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":""},{"name":"example","doc":null,"default_value":"nil","external_name":"example","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% PARSER_OPTS << arg_name %}\n\n    @\n{{ arg_name.id }}\n : String?\n\n    def set_opt_for_\n{{ arg_name.id }}\n(unused_args : Array(String))\n      option_parser.on(\n        \n{% if shortcut %}\"{{ shortcut.id }} {{ arg_name.stringify.upcase.id }}\",{% end %}\n\n        \"--\n{{ (arg_name.id.stringify.underscore.gsub(/_/, \"-\")).id }}\n=\n{{ arg_name.id.stringify.upcase.id }}\n\",\n        \n{{ description }}\n\n      ) do |value|\n        value = value.strip\n        \n{% if format %}\n        if value !~ {{ format }}\n          raise <<-ERROR\n          Invalid format for {{ arg_name.id }}. It should match {{ format }}\n          {% if example %}\n            Example: {{ example.id }}\n          {% end %}\n          ERROR\n        end\n        {% end %}\n\n        @\n{{ arg_name.id }}\n = value\n      \nend\n    \nend\n\n    def \n{{ arg_name.id }}\n : String\n{% if optional %}?{% end %}\n\n      \n{% if !optional %}\n        if @{{ arg_name.id }}.nil?\n          raise <<-ERROR\n          {{ arg_name.id }} is required, but no value was passed.\n\n          Try this...\n\n            {% if shortcut %}{{ shortcut.id }} SOME_VALUE{% end %}\n            --{{ (arg_name.id.stringify.underscore.gsub(/_/, \"-\")).id }}=SOME_VALUE\n          ERROR\n        end\n        @{{ arg_name.id }}.not_nil!\n      {% else %}\n        @{{ arg_name.id }}\n      {% end %}\n\n    \nend\n  \n"}},{"id":"name(name_text)-macro","html_id":"name(name_text)-macro","name":"name","doc":"Sets a custom title for the task\n\nBy default the name is derived from the full module and class name.\nHowever if that name is not desired, a custom one can be set.\n\n```\nclass Dev::Prime < LuckyTask::Task\n  # Would be \"dev.prime\" by default, but we want to set it to \"dev.setup\":\n  name \"dev.setup\"\n  summary \"Seed the development database with example data\"\n\n  # other methods, etc.\nend\n```","summary":"<p>Sets a custom title for the task</p>","abstract":false,"args":[{"name":"name_text","doc":null,"default_value":"","external_name":"name_text","restriction":""}],"args_string":"(name_text)","location":{"filename":"src/lucky_task/task.cr","line_number":61,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task.cr#L61"},"def":{"name":"name","args":[{"name":"name_text","doc":null,"default_value":"","external_name":"name_text","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def name\n      \n{{ name_text }}\n\n    \nend\n  \n"}},{"id":"positional_arg(arg_name,description,to_end=false,format=nil,example=nil)-macro","html_id":"positional_arg(arg_name,description,to_end=false,format=nil,example=nil)-macro","name":"positional_arg","doc":"Creates a method of `arg_name` that returns the value passed in from the CLI.\nThe CLI arg position is based on the order in which `positional_arg` is specified\nwith the first call being position 0, and so on.\n\nIf your arg takes more than one value, you can set `to_end` to true to capture all\nargs from this position to the end. This will make your `arg_name` method return `Array(String)`.\n\n* `arg_name` : String - The name of the argument\n* `description` : String - The help text description for this option\n* `to_end` : Bool - Capture all args from this position to the end.\n* `format` : Regex - The format you expect the args to match\n* `example` : String - An example string that matches the given `format`","summary":"<p>Creates a method of <code>arg_name</code> that returns the value passed in from the CLI.</p>","abstract":false,"args":[{"name":"arg_name","doc":null,"default_value":"","external_name":"arg_name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"to_end","doc":null,"default_value":"false","external_name":"to_end","restriction":""},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":""},{"name":"example","doc":null,"default_value":"nil","external_name":"example","restriction":""}],"args_string":"(arg_name, description, to_end = <span class=\"n\">false</span>, format = <span class=\"n\">nil</span>, example = <span class=\"n\">nil</span>)","location":{"filename":"src/lucky_task/task.cr","line_number":79,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task.cr#L79"},"def":{"name":"positional_arg","args":[{"name":"arg_name","doc":null,"default_value":"","external_name":"arg_name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"to_end","doc":null,"default_value":"false","external_name":"to_end","restriction":""},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":""},{"name":"example","doc":null,"default_value":"nil","external_name":"example","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% PARSER_OPTS << arg_name %}\n\n    @\n{{ arg_name.id }}\n : \n{% if to_end %}Array(String){% else %}String{% end %}\n | Nil\n\n    def set_opt_for_\n{{ arg_name.id }}\n(args : Array(String))\n      \n{% if to_end %}\n        value = args[@positional_arg_count..-1]\n      {% else %}\n        value = args[@positional_arg_count]?\n      {% end %}\n\n      \n{% if format %}\n      matches = value.is_a?(Array) ? value.all?(&.=~({{ format }})) : value =~ {{ format }}\n      if !matches\n        raise <<-ERROR\n        Invalid format for {{ arg_name.id }}. It should match {{ format }}\n        {% if example %}\n          Example: {{ example.id }}\n        {% end %}\n        ERROR\n      end\n      {% end %}\n\n      @\n{{ arg_name.id }}\n = value\n      @positional_arg_count += 1\n    \nend\n\n    def \n{{ arg_name.id }}\n : \n{% if to_end %}Array(String){% else %}String{% end %}\n\n      if @\n{{ arg_name.id }}\n.nil?\n        raise \"\n{{ arg_name.id }}\n is required, but no value was passed.\"\n      \nend\n      @\n{{ arg_name.id }}\n.not_nil!\n    \nend\n  \n"}},{"id":"summary(summary_text)-macro","html_id":"summary(summary_text)-macro","name":"summary","doc":null,"summary":null,"abstract":false,"args":[{"name":"summary_text","doc":null,"default_value":"","external_name":"summary_text","restriction":""}],"args_string":"(summary_text)","location":{"filename":"src/lucky_task/task.cr","line_number":41,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task.cr#L41"},"def":{"name":"summary","args":[{"name":"summary_text","doc":null,"default_value":"","external_name":"summary_text","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def summary\n      \n{{ summary_text }}\n\n    \nend\n  \n"}},{"id":"switch(arg_name,description,shortcut=nil)-macro","html_id":"switch(arg_name,description,shortcut=nil)-macro","name":"switch","doc":"Creates a method of `arg_name` where the return value is boolean.\nIf the flag `--arg_name` is passed, the value is `true`.\n\n* `arg_name` : String - The name of the argument\n* `description` : String - The help text description for this option\n* `shorcut` : String - An optional short flag (e.g. `-a`)","summary":"<p>Creates a method of <code>arg_name</code> where the return value is boolean.</p>","abstract":false,"args":[{"name":"arg_name","doc":null,"default_value":"","external_name":"arg_name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"shortcut","doc":null,"default_value":"nil","external_name":"shortcut","restriction":""}],"args_string":"(arg_name, description, shortcut = <span class=\"n\">nil</span>)","location":{"filename":"src/lucky_task/task.cr","line_number":171,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task.cr#L171"},"def":{"name":"switch","args":[{"name":"arg_name","doc":null,"default_value":"","external_name":"arg_name","restriction":""},{"name":"description","doc":null,"default_value":"","external_name":"description","restriction":""},{"name":"shortcut","doc":null,"default_value":"nil","external_name":"shortcut","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% PARSER_OPTS << arg_name %}\n\n    @\n{{ arg_name.id }}\n : Bool = false\n\n    def set_opt_for_\n{{ arg_name.id }}\n(unused_args : Array(String))\n      option_parser.on(\n        \n{% if shortcut %}\"{{ shortcut.id }}\",{% end %}\n\n        \"--\n{{ (arg_name.id.stringify.underscore.gsub(/_/, \"-\")).id }}\n\",\n        \n{{ description }}\n\n      ) do\n        @\n{{ arg_name.id }}\n = true\n      \nend\n    \nend\n\n    def \n{{ arg_name.id }}\n? : Bool\n      @\n{{ arg_name.id }}\n\n    \nend\n  \n"}}],"types":[]},{"html_id":"lucky_task/LuckyTask/TaskNotFoundErrorMessage","path":"LuckyTask/TaskNotFoundErrorMessage.html","kind":"class","full_name":"LuckyTask::TaskNotFoundErrorMessage","name":"TaskNotFoundErrorMessage","abstract":false,"superclass":{"html_id":"lucky_task/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky_task/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky_task/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky_task/task_not_found_error_message.cr","line_number":3,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task_not_found_error_message.cr#L3"}],"repository_name":"lucky_task","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lucky_task/LuckyTask","kind":"module","full_name":"LuckyTask","name":"LuckyTask"},"doc":null,"summary":null,"class_methods":[{"id":"print(*args)-class-method","html_id":"print(*args)-class-method","name":"print","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","args_html":"(*args)","location":{"filename":"src/lucky_task/task_not_found_error_message.cr","line_number":7,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task_not_found_error_message.cr#L7"},"def":{"name":"print","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args)).print"}}],"constructors":[{"id":"new(task_name:String,io:IO=STDERR)-class-method","html_id":"new(task_name:String,io:IO=STDERR)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"task_name","doc":null,"default_value":"","external_name":"task_name","restriction":"String"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(task_name : String, io : IO = <span class=\"t\">STDERR</span>)","args_html":"(task_name : String, io : IO = <span class=\"t\">STDERR</span>)","location":{"filename":"src/lucky_task/task_not_found_error_message.cr","line_number":4,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task_not_found_error_message.cr#L4"},"def":{"name":"new","args":[{"name":"task_name","doc":null,"default_value":"","external_name":"task_name","restriction":"String"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(task_name, io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"print-instance-method","html_id":"print-instance-method","name":"print","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/task_not_found_error_message.cr","line_number":11,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/task_not_found_error_message.cr#L11"},"def":{"name":"print","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = \"Task #{@task_name.colorize(:cyan)} not found.\"\nsimilar_task_name.try do |name|\n  message = message + (\" Did you mean '#{name}'?\".colorize(:yellow)).to_s\nend\n@io.puts(message)\n"}}],"macros":[],"types":[]},{"html_id":"lucky_task/LuckyTask/TextHelpers","path":"LuckyTask/TextHelpers.html","kind":"module","full_name":"LuckyTask::TextHelpers","name":"TextHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/lucky_task/text_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/text_helpers.cr#L1"}],"repository_name":"lucky_task","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"lucky_task/LuckyTask","kind":"module","full_name":"LuckyTask","name":"LuckyTask"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"arrow-instance-method","html_id":"arrow-instance-method","name":"arrow","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/text_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/text_helpers.cr#L2"},"def":{"name":"arrow","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"▸\""}},{"id":"green_arrow-instance-method","html_id":"green_arrow-instance-method","name":"green_arrow","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/text_helpers.cr","line_number":10,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/text_helpers.cr#L10"},"def":{"name":"green_arrow","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"arrow.colorize(:green)"}},{"id":"red_arrow-instance-method","html_id":"red_arrow-instance-method","name":"red_arrow","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/lucky_task/text_helpers.cr","line_number":6,"url":"https://github.com/luckyframework/lucky_task/blob/eec178bae5e1740989e2e85fbd6e00393dc11a6c/src/lucky_task/text_helpers.cr#L6"},"def":{"name":"red_arrow","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"arrow.colorize(:red)"}}],"macros":[],"types":[]}]}]}}